{"version":3,"sources":["hooks/useRefresh.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","state/hooks.ts","utils/getRpcUrl.ts","contexts/RefreshContext.tsx","state/actions.ts","components/UnlockButton.tsx","config/constants/types.ts","config/constants/contracts.ts","views/Referral/Referral.tsx","contexts/BlockContext.tsx","components/Input/Input.tsx","views/Lottery/components/UnlockWalletCard.tsx","hooks/useReferralCount.ts","utils/addressHelpers.ts","utils/multicall.ts","config/constants/pools.ts","config/constants/farms.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","utils/web3.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","views/ComingSoon/ComingSoon.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","components/layout/Container.tsx","components/layout/Page.tsx","contexts/Localisation/translationsContext.ts"],"names":["useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","calls","address","tokenAddresses","name","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","console","log","lpSymbol","tokenAmount","BigNumber","div","pow","tokenPriceVsQuote","tokenSymbol","multipliedBy","toFixed","lpTotalInQuoteToken","times","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","pid","info","totalAllocPoint","eggPerBlock","allocPoint","_hex","poolWeight","toJSON","toNumber","multiplier","toString","depositFeeBP","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","fetchFarmUserEarlyStaker","parsedEarlyStakers","earlyRewardMultiplier","isGreaterThan","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","userEarlyStaker","farmAllowance","allowance","earlyStaker","variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","TranslationsContext","length","ZERO","useFetchPublicData","useDispatch","useEffect","useFarms","useSelector","useFarmFromPid","useFarmUser","usePriceBnbBusd","usePriceCakeBusd","useTotalValue","bnbPrice","cakePrice","value","i","val","quoteTokenSymbol","QuoteToken","BNB","CAKE","plus","nodes","process","getNodeUrl","randomIndex","random","React","createContext","RefreshContextProvider","children","useState","setSlow","setFast","interval","setInterval","prev","clearInterval","Provider","UnlockButton","props","TranslateString","useWallet","connect","reset","onPresentConnectModal","useWalletModal","onClick","PoolCategory","cake","137","97","masterChef","wbnb","lottery","lotteryNFT","mulltiCall","busd","referral","StyledFarmStakingCard","styled","Card","Block","img","theme","colors","textSubtle","Referral","referralCount","ReferralCount","convertAddress","acc","b64","Buffer","from","as","size","color","mb","style","textAlign","fontSize","marginBottom","placeholder","onChange","evt","target","width","paddingLeft","disabled","variant","navigator","clipboard","writeText","src","alt","height","margin","float","top","right","position","zIndex","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","web3","getWeb3","eth","getBlockNumber","blockNumber","current","StyledInputWrapper","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","startAdornment","StyledCardBody","CardBody","StyledHeading","Heading","IconWrapper","UnlockWalletCard","isActive","marginTop","marginRight","useReferralCount","balance","setBalance","cakeContract","getContract","referralAbi","getReferralAddress","methods","referralsCount","call","bal","fethReferralCount","getCakeAddress","addresses","chainId","getMulticallAddress","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","abi","multi","Contract","MultiCallAbi","itf","Interface","calldata","toLowerCase","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","pools","risk","contracts","BUSD","nonBnbPools","poolsConfig","filter","p","stakingTokenName","bnbPools","nonMasterPools","sousId","masterChefContract","masterChefABI","fetchPoolsAllowance","stakingTokenAddress","contractAddress","allowances","reduce","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","sousChefABI","userInfo","stakedBalances","amount","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingPingu","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","contractOptions","GlobalStyle","createGlobalStyle","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","parseInt","REACT_APP_CROWDIN_PROJECTID","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","setTranslations","storedLangCode","localStorage","getItem","storedLang","getStoredLang","fetch","then","r","json","translationApiResponse","catch","e","error","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","config","label","icon","href","items","Menu","cakePriceUsd","login","logout","currentLang","langs","setLang","links","priceLink","Wrapper","Page","PageLoader","ComingSoon","Home","lazy","Farms","NotFound","EXPONENTIAL_AT","DECIMAL_PLACES","App","window","Global","path","exact","tokenMode","component","memo","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","rpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById","Container","mediaQueries","sm","lg","defaultTranslationState"],"mappings":"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","file":"static/js/main.30ec12b6.chunk.js","sourcesContent":["import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\nimport { QuoteToken } from '../../config/constants/types'\n\nconst CHAIN_ID = 137\n// process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals\n      ] = await multicall(erc20, calls)\n      let tokenAmount;\n      let lpTotalInQuoteToken;\n      let tokenPriceVsQuote;\n\n      console.log('token decimals', tokenDecimals, quoteTokenDecimals, farmConfig.lpSymbol)\n\n      if(farmConfig.isTokenOnly){\n        console.log(lpTokenBalanceMC)\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals));\n        if(farmConfig.tokenSymbol === 'USDC' || farmConfig.tokenSymbol === 'USDT' || farmConfig.tokenSymbol === 'DAI'){\n          tokenPriceVsQuote = new BigNumber(1);\n        }else{\n          tokenPriceVsQuote = new BigNumber(\n              quoteTokenDecimals < 19 ?\n                  new BigNumber(quoteTokenBlanceLP).multipliedBy(new BigNumber(10).pow((farmConfig.lpSymbol === 'WBTC' ? 8 : 18)-quoteTokenDecimals)).toFixed()\n                  : quoteTokenBlanceLP\n          ).div(new BigNumber(\n              tokenBalanceLP\n          ));\n        }\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote);\n      }else{\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio)\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        if(tokenAmount.comparedTo(0) > 0){\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount);\n        }else{\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\n        }\n      }\n      const [info, totalAllocPoint, eggPerBlock] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'pinguPerBlock',\n        },\n      ])\n\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n        eggPerBlock: new BigNumber(eggPerBlock).toNumber(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport {stake} from \"../../utils/callHelpers\";\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingPingu',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n\nexport const fetchFarmUserEarlyStaker = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedEarlyStakers = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance.earlyRewardMultiplier._hex).isGreaterThan(100)\n  })\n  return parsedEarlyStakers\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n  fetchFarmUserEarlyStaker,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      console.log(liveFarmsData)\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n  const userEarlyStaker = await fetchFarmUserEarlyStaker(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n      earlyStaker: userEarlyStaker[index]\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\nimport { State, Farm, Pool } from './types'\nimport { QuoteToken } from '../config/constants/types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    // dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  // console.log('early', farm.userData ? farm.userData.earlyStaker : 0)\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n    earlyStaker: farm.userData ? farm.userData.earlyStaker : false\n  }\n}\n\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 2 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  // const pid = 0 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = 1; // Pingu-BUSD LP\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms();\n  const bnbPrice = usePriceBnbBusd();\n  const cakePrice = usePriceCakeBusd();\n  let value = new BigNumber(0);\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val;\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = (bnbPrice.times(farm.lpTotalInQuoteToken));\n      }else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = (cakePrice.times(farm.lpTotalInQuoteToken));\n      }else{\n        val = (farm.lpTotalInQuoteToken);\n      }\n      value = value.plus(val);\n    }\n  }\n  return value;\n}\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  137: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  risk: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","export default {\n  cake: {\n    137: '0x34c41776FE94Ef35638C537776617bF179212f60',\n    97: '',\n  },\n  masterChef: {\n    137: '0xED0e35803A82eF6e3dC10c353e59B2E85c5853F4',\n    97: '',\n  },\n  wbnb: {\n    137: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',\n    97: '',\n  },\n  lottery: {\n    137: '',\n    97: '',\n  },\n  lotteryNFT: {\n    137: '',\n    97: '',\n  },\n  mulltiCall: {\n    137: '0x95028E5B8a734bb7E2071F96De89BABe75be9C8E',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    137: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n    97: '',\n  },\n  referral: {\n    137: '0x267cE9F6AfcD9F18ADfDaeD61CFCC8C3829B2723',\n    97: '',\n  }\n}\n","import React, { useEffect, useCallback, useState } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { Heading, Card, CardBody, Button } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport styled from \"styled-components\";\nimport CakeHarvestBalance from \"../Home/components/CakeHarvestBalance\";\nimport CakeWalletBalance from \"../Home/components/CakeWalletBalance\";\nimport UnlockButton from \"../../components/UnlockButton\";\nimport Input from \"../../components/Input\";\nimport UnlockWalletCard from \"../Lottery/components/UnlockWalletCard\";\nimport ReferralCount from \"../../hooks/useReferralCount\";\n\n\nconst StyledFarmStakingCard = styled(Card)`\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 276px;\n  z-index: 30;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n  margin-top:60px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst Referral: React.FC = () => {\n    const { account } = useWallet()\n    const referralCount = ReferralCount().toFixed(0)\n\n    const handleChange = (evt: any) => {\n        const { value: inputValue } = evt.target\n    }\n\n    const convertAddress = (acc: string) => {\n        const b64 = Buffer.from(acc).toString('base64')\n        return `https://polypingu.finance/#/?ref=0k${b64}`;\n    }\n\n    return (\n        <Page>\n            <Heading as=\"h2\" size=\"md\" color=\"primary\" mb=\"30px\" style={{ textAlign: 'center', fontSize:'3em'}}>\n               Pingu Referral Program\n            </Heading>\n            <StyledFarmStakingCard>\n                <CardBody>\n                    <Heading size=\"xl\" mb=\"20px\" style={{textAlign:'center', fontSize:'20px'}}>\n                        Share the referral link below to invite your friends and earn 20% of your friends earnings FOREVER!\n                    </Heading>\n\n                    <Block>\n                        {!account ? (\n                            <UnlockWalletCard />\n                        ) : (\n                            <><h2 style={{textAlign:'center', marginBottom:'20px', fontSize:'20px'}}>Your referral link:</h2>\n                            <Input\n                                placeholder=\"0\"\n                                value={convertAddress(account)}\n                                onChange={handleChange}\n                            />\n<br/>\n                        <div style={{width: '100%',paddingLeft: '45.5%'}}>\n                                    <Button\n                                        style={{width:'15%'}}\n                                    disabled={false}\n                                    size='md'\n                                    variant='secondary'\n                                    marginBottom='15px'\n                                    onClick={async () => {\n                                        navigator.clipboard.writeText(convertAddress(account))\n                                    }}\n                                >\n                                    Copy\n                                </Button>\n                            </div>\n                                <br />\n                                <h3 style={{textAlign: 'center'}}>Your referrals: {referralCount}</h3>\n                            </>\n\n                            )}\n                    </Block>\n\n                </CardBody>\n            </StyledFarmStakingCard>\n             <img src=\"/images/egg/banner.png\" alt=\"illustration\" style={{width:'300px', height: 'auto', margin:'auto', float:'right', top: '20px',right: '1' +\n                     '0px', position: 'absolute', zIndex: 'auto'}} />\n\n        </Page>\n    )\n}\n\nexport default Referral\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 2500)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <img src=\"/images/egg/banner.png\" alt=\"lottery bunny\" style={{height:'68px', marginTop: '36px', marginRight: '20px'}} />\n        </IconWrapper>\n        <StyledHeading size=\"md\">{TranslateString(999, 'Unlock wallet to access your referral link')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport referralAbi from 'config/abi/referral.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport {getCakeAddress, getReferralAddress} from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\n\nexport const useReferralCount = () => {\n    const { account } = useWallet()\n    const [balance, setBalance] = useState(new BigNumber(0))\n    const { slowRefresh } = useRefresh()\n\n    useEffect(() => {\n        if(account) {\n            const fethReferralCount = async () => {\n                const cakeContract = getContract(referralAbi, getReferralAddress())\n                const bal = await cakeContract.methods.referralsCount(account).call()\n                console.log('testttt', bal)\n                setBalance(new BigNumber(bal))\n            }\n\n            fethReferralCount()\n        }\n    }, [account, slowRefresh])\n\n    return balance\n}\n\nexport default useReferralCount\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n// const chainId = 137;\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\nexport const getReferralAddress = () => {\n  return addresses.referral[chainId]\n}\n\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  // {\n  //   sousId: 0,\n  //   tokenName: 'CAKE',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     137: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://pancakeswap.finance/',\n  //   harvest: true,\n  //   tokenPerBlock: '10',\n  //   sortOrder: 1,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 1,\n  //   tokenName: 'TWT',\n  //   stakingTokenName: QuoteToken.SYRUP,\n  //   stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     137: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://trustwallet.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '20',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n]\n\nexport default pools\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    risk: 5,\n    lpSymbol: 'PINGU-WMATIC LP',\n    lpAddresses: {\n      97: '',\n      137: '0xc63DBbdC2ee5F309Fa1A379D961d62d9D5fFd8fF',\n    },\n    tokenSymbol: 'PINGU',\n    tokenAddresses: {\n      97: '',\n      137: '0x34c41776FE94Ef35638C537776617bF179212f60',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 1,\n    risk: 5,\n    lpSymbol: 'PINGU-USDC LP',\n    lpAddresses: {\n      97: '',\n      137: '0x905f7287a58fb6e7ea2e04b362ead78ad513af32',\n    },\n    tokenSymbol: 'PINGU',\n    tokenAddresses: {\n      97: '',\n      137: '0x34c41776FE94Ef35638C537776617bF179212f60',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 2,\n    risk: 5,\n    lpSymbol: 'WMATIC-USDC LP',\n    lpAddresses: {\n      97: '',\n      137: '0x6e7a5fafcec6bb1e78bae2a1f0b612012bf14827',\n    },\n    tokenSymbol: 'PINGU',\n    tokenAddresses: {\n      97: '',\n      137: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 3,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'PINGU',\n    lpAddresses: {\n      97: '',\n      137: '0xc63DBbdC2ee5F309Fa1A379D961d62d9D5fFd8fF', // BNB-BUSD LP\n    },\n    // done\n    tokenSymbol: 'PINGU',\n    tokenAddresses: {\n      97: '',\n      137: '0x34c41776FE94Ef35638C537776617bF179212f60',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 4,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'WMATIC',\n    lpAddresses: {\n      97: '',\n      137: '0x6e7a5fafcec6bb1e78bae2a1f0b612012bf14827', // BNB-BUSD LP\n    },\n    tokenSymbol: 'WMATIC',\n    //  done\n    tokenAddresses: {\n      97: '',\n      137: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 5,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'WBTC',\n    lpAddresses: {\n      97: '',\n      137: '0xf6B87181BF250af082272E3f448eC3238746Ce3D', // BNB-BUSD LP\n    },\n    tokenSymbol: 'WBTC',\n    // done\n    tokenAddresses: {\n      97: '',\n      137: '0x1BFD67037B42Cf73acF2047067bd4F2C47D9BfD6',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 6,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'WETH',\n    lpAddresses: {\n      97: '',\n      137: '0x853ee4b2a13f8a742d64c8f088be7ba2131f670d', // BNB-BUSD LP\n    },\n    tokenSymbol: 'WETH',\n    // done\n    tokenAddresses: {\n      97: '',\n      137: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 7,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'USDT',\n    lpAddresses: {\n      97: '',\n      137: '0x2cF7252e74036d1Da831d11089D326296e64a728', // BNB-BUSD LP\n    },\n    tokenSymbol: 'USDT',\n    // done\n    tokenAddresses: {\n      97: '',\n      137: '0xc2132D05D31c914a87C6611C10748AEb04B58e8F',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 8,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'USDC',\n    lpAddresses: {\n      97: '',\n      137: '0x6e7a5fafcec6bb1e78bae2a1f0b612012bf14827', // BNB-BUSD LP\n    },\n    tokenSymbol: 'USDC',\n    // done\n    tokenAddresses: {\n      97: '',\n      137: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 9,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'DAI',\n    lpAddresses: {\n      97: '',\n      137: '0x6e7a5fafcec6bb1e78bae2a1f0b612012bf14827', // BNB-BUSD LP\n    },\n    tokenSymbol: 'DAI',\n    tokenAddresses: {\n      97: '',\n      137: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 10,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'QUICK',\n    lpAddresses: {\n      97: '',\n      137: '0x1F1E4c845183EF6d50E9609F16f6f9cAE43BC9Cb', // BNB-BUSD LP\n    },\n    tokenSymbol: 'QUICK',\n    // done\n    tokenAddresses: {\n      97: '',\n      137: '0x831753DD7087CaC61aB5644b308642cc1c33Dc13',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n\n  // link, sushi left\n\n  {\n    pid: 12,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'LINK',\n    lpAddresses: {\n      97: '',\n      137: '0x3c986748414A812e455DCd5418246B8fdEd5C369', // Pingu-BUSD LP (BUSD-BUSD will ignore)\n    },\n    tokenSymbol: 'LINK',\n    tokenAddresses: {\n      97: '',\n      137: '0x53E0bca35eC356BD5ddDFebbD1Fc0fD03FaBad39',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 11,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'SUSHI',\n    lpAddresses: {\n      97: '',\n      137: '0x597A9bc3b24C2A578CCb3aa2c2C62C39427c6a49', // BNB-BUSD LP\n    },\n    tokenSymbol: 'SUSHI',\n    tokenAddresses: {\n      97: '',\n      137: '0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 13,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'AAVE',\n    lpAddresses: {\n      97: '',\n      137: '0x0554059D42E26f35CC958581C71FdfD92405d02f', // Pingu-BUSD LP (BUSD-BUSD will ignore)\n    },\n    tokenSymbol: 'AAVE',\n    tokenAddresses: {\n      97: '',\n      137: '0xd6df932a45c0f255f85145f286ea0b292b21c90b',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  }\n\n\n]\n\nexport default farms\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingPingu('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap-libs/uikit'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Robot', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  // AR,\n  // CA,\n  // ZHCN,\n  // ZHTW,\n  // CS,\n  // DA,\n  // DE,\n  // NL,\n  // FIL,\n  // FI,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PTBR,\n  // RO,\n  // RU,\n  // SR,\n  // ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`);\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then(r=>r.json())\n      // fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error(\"ERROR\");\n          console.error(e);\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://quickswap.exchange/#/swap?outputCurrency=0x34c41776FE94Ef35638C537776617bF179212f60',\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://quickswap.exchange/#/add/ETH/0x34c41776FE94Ef35638C537776617bF179212f60',\n      },\n    ],\n  },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Pools',\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: 'Referrals',\n    icon: 'GroupsIcon',\n    href: '/referrals',\n  },\n  {\n    label: 'Vaults',\n    icon: 'BondsIcon',\n    href: '/vaults',\n  },\n  {\n    label: 'Audit',\n    icon: 'AuditIcon',\n    href: 'https://github.com/PolyPingu/contract-audit',\n  },\n  {\n    label: 'Info',\n    icon: 'InfoIcon',\n    items: [\n      {\n        label: 'GitBook',\n        href: 'https://PolyPingu.gitbook.io/',\n      },\n      {\n        label: 'QuickSwap Exchange',\n        href: 'https://quickswap.exchange/#/swap?outputCurrency=0x34c41776FE94Ef35638C537776617bF179212f60',\n      },\n      {\n        label: 'QuickSwap Charts',\n        href: 'https://info.quickswap.exchange/token/0x34c41776FE94Ef35638C537776617bF179212f60'\n      }\n    ],\n  }\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      priceLink={`https://quickswap.exchange/#/swap?outputCurrency=${getCakeAddress()}`}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useEffect, useCallback, useState } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { Image, Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\n\n\nexport interface FarmsProps{\n    tokenMode?: boolean\n}\n\nconst ComingSoon: React.FC = () => {\n    return (\n        <Page>\n            <Heading as=\"h1\" size=\"lg\" color=\"primary\" mb=\"50px\" style={{ textAlign: 'center', fontSize:'5em'}}>\n                Coming Soon!\n            </Heading>\n\n             <img src=\"/images/egg/banner.png\" alt=\"illustration\" style={{width:'300px', height: 'auto', margin:'auto', float:'right', top: '20px',right: '1' +\n                     '0px', position: 'absolute'}} />\n        </Page>\n    )\n}\n\nexport default ComingSoon\n","import React, {useEffect, Suspense, lazy, useState} from 'react'\nimport {BrowserRouter as Router, HashRouter, Redirect, Route, Switch, useLocation} from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\nimport ComingSoon from \"./views/ComingSoon\";\nimport Referral from \"./views/Referral\";\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\n// const Lottery = lazy(() => import('./views/Lottery'))\n// const Pools = lazy(() => import('./views/Pools'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Nft = lazy(() => import('./views/Nft'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nfunction getParams(location) {\n    const searchParams = new URLSearchParams(location.search);\n    return {\n        query: searchParams.get('query') || '',\n    };\n}\n\nconst App: React.FC = (props) => {\n  const { account, connect } = useWallet()\n    // const { location } = props;\n    // const { query } = getParams(location);\n\n    useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n    }, [account, connect])\n\n\n\n  useFetchPublicData()\n\n\n  return (\n    <HashRouter>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Farms tokenMode/>\n            </Route>\n            {/* <Route path=\"/pools\"> */}\n            {/*  <Pools /> */}\n            {/* </Route> */}\n             <Route path=\"/vaults\">\n              <ComingSoon />\n             </Route>\n              <Route path=\"/referrals\">\n                  <Referral />\n              </Route>\n            {/* <Route path=\"/ifo\"> */}\n            {/*  <Ifos /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/nft\"> */}\n            {/*  <Nft /> */}\n            {/* </Route> */}\n            {/* Redirect */}\n            {/* <Route path=\"/staking\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/syrup\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n    </HashRouter>\n  )\n}\n\nexport default React.memo(App)\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID);\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <bsc.UseWalletProvider\n            chainId={chainId}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </bsc.UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n"],"sourceRoot":""}